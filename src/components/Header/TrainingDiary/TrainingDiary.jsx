import { useState } from 'react';
import { Link } from 'react-router-dom';
import { toast } from 'react-toastify';
import css from './TrainingDiary.module.css';

function TrainingDiary() {
  const [entries, setEntries] = useState([]);

  const handleAddEntry = () => {
    setEntries((prev) => [
      ...prev,
      { name: '', note: '', id: Date.now() },
    ]);
  };

  const handleChange = (id, field, value) => {
    setEntries((prev) =>
      prev.map((entry) =>
        entry.id === id ? { ...entry, [field]: value } : entry
      )
    );
  };

  const handleDelete = (id) => {
    setEntries((prev) => prev.filter((entry) => entry.id !== id));
  };

  const autoResizeTextarea = (e) => {
  e.target.style.height = 'auto';
  e.target.style.height = `${e.target.scrollHeight}px`;
};

  const handleSave = (id) => {
    const entry = entries.find((e) => e.id === id);
    if (entry.name.trim() && entry.note.trim()) {
      toast.success('–ù–æ—Ç–∞—Ç–∫—É –∑–±–µ—Ä–µ–∂–µ–Ω–æ! ‚úÖ');
    } else {
      toast.error('–ó–∞–ø–æ–≤–Ω—ñ—Ç—å —É—Å—ñ –ø–æ–ª—è!');
    }
  };

  return (
    <div className={css.container}>
      <Link to="/" className={css.backLink}>‚Üê –ù–∞ –≥–æ–ª–æ–≤–Ω—É</Link>
      <h2 className={css.title}>–©–æ–¥–µ–Ω–Ω–∏–∫ —Ç—Ä–µ–Ω—É–≤–∞–Ω—å</h2>

      <button onClick={handleAddEntry} className={css.addButton}>
        + –î–æ–¥–∞—Ç–∏ –Ω–æ–≤—É –∑–∞–º—ñ—Ç–∫—É
      </button>

      <div className={css.entries}>
        {entries.map((entry, index) => (
          <div key={entry.id} className={css.entryCard}>
            <div className={css.entryHeader}>
              <h3>–ó–∞–ø–∏—Å #{index + 1}</h3>
              <button onClick={() => handleDelete(entry.id)} className={css.deleteButton}>‚úï</button>
            </div>
            <input
              type="text"
              placeholder="–Ü–º‚Äô—è —Ç–∞ –ø—Ä—ñ–∑–≤–∏—â–µ"
              value={entry.name}
              onChange={(e) => handleChange(entry.id, 'name', e.target.value)}
              className={css.input}
            />
           <textarea
          placeholder="–ù–æ—Ç–∞—Ç–∫–∞ –¥–æ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è"
        value={entry.note}
  onChange={(e) => {
    handleChange(entry.id, 'note', e.target.value);
    autoResizeTextarea(e); // üî• –ê–≤—Ç–æ-–∑–±—ñ–ª—å—à–µ–Ω–Ω—è –≤–∏—Å–æ—Ç–∏
  }}
  className={css.textarea}
/>
            <button
              onClick={() => handleSave(entry.id)}
              className={css.saveButton}
            >
              –ó–±–µ—Ä–µ–≥—Ç–∏ –Ω–æ—Ç–∞—Ç–∫—É
            </button>
          </div>
        ))}
      </div>
    </div>
  );
}

export default TrainingDiary;
